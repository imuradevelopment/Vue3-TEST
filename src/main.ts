import './assets/main.css'

// createApp 関数のインポート
import { createApp } from 'vue'
// ルートコンポーネントを単一ファイルコンポーネントからインポートする
import App from './App.vue'

// createApp()でアプリケーションのインスタンス(app) を作成する
const app = createApp(
    // ルートコンポーネント オプション
    App
)

// アプリの設定
// すべての子孫コンポーネントから発生したエラーを捕捉するアプリケーションレベルのエラーハンドラーを定義
app.config.errorHandler = (err) => {
    /* エラーの制御 */
}
// グローバルコンポーネントの登録
// app.component('TodoDeleteButton', TodoDeleteButton)

// なんやかんや設定した後にmountすること
// アプリケーションのインスタンスは .mount() メソッドが呼ばれるまで何もレンダリングしません。
// インスタンスには「コンテナ」引数という、実際の DOM 要素、あるいはセレクター文字列が必要です。
/*
 * .mount() メソッドはすべてのアプリの設定やアセットの登録が完了した後、常に呼ばれる必要があります。
 * また、アセット登録をするメソッドとは異なり、返り値はアプリケーションのインスタンスではなく、
 *  ルートコンポーネントインスタンスであるということに注意してください。
 */
app.mount('#app')

// 複数のアプリケーションインスタンス
/* もし Vue をサーバーレンダリングされた HTML を拡張するために使用していたり、
 * 大きなページの中で特定の一部を操作するためだけに必要とするなら、
 * ページ全体で単一の Vue アプリケーションのインスタンスでマウントするのを避けましょう。
 * その代わりに、複数の小さなアプリケーションのインスタンスを作成し、それぞれの受け持つ要素の上でマウントするようにしてください。
 */
const app1 = createApp({
    /* ... */
})
app1.mount('#container-1')

const app2 = createApp({
    /* ... */
})
app2.mount('#container-2')